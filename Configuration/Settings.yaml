Mw:
  Metamorph:

    transformations:
      extensionInventory:
        name: ExtensionInventory
      classInventory:
        name: ClassInventory
        dependsOn:
          - extensionInventory
        settings:
          visitors: []
      resourceInventory:
        name: ResourceInventory
        dependsOn:
          - extensionInventory
      cleanupPackages:
        name: CleanupPackages
        dependsOn:
          - extensionInventory
      createPackages:
        name: CreatePackages
        dependsOn:
          - cleanupPackages
      createClasses:
        name: CreateClasses
        dependsOn:
          - createPackages
          - classInventory
      createResources:
        name: CreateResources
        dependsOn:
          - createPackages
          - resourceInventory
      rewritePackageClasses:
        name: Mw\Metamorph\Transformation\GenericAstVisitorTransformation
        dependsOn:
          - createClasses
        settings:
          visitors:
            - ClassNamespaceRewriterVisitor
      analyzeClasses:
        name: AnalyzeClasses
        dependsOn:
          - rewritePackageClasses
      cleanClassFiles:
        name: CleanClassFiles
        dependsOn:
          - analyzeClasses
      refactorClasses:
        name: Mw\Metamorph\Transformation\GenericAstVisitorTransformation
        dependsOn:
          - analyzeClasses
        settings:
          visitors:
            - ExtbaseClassReplacementVisitor
            - EntityDoctrineMigrationVisitor
            - ReplaceMakeInstanceCallsVisitor
            - RewriteSingletonsVisitor
            - ReplaceAnnotationsVisitor
            - InjectUtilitiesVisitor
            - FlashMessageVisitor
            - PackageRedirectVisitor
            - DatabaseAccessVisitor
            - InjectStaticDependenciesVisitor
      transformLocallang:
        name: XliffConversion
        dependsOn:
          - createResources
      migrateDatabase:
        name: MigrateDatabaseStructure
        dependsOn:
          - refactorClasses
      createDoctrineMigrations:
        name: CreateDoctrineMigrations
        dependsOn:
          - migrateDatabase
      resynchronize:
        name: ResynchronizePackages
        dependsOn:
          - finalize

    staticReplacements:
      DateTime: DateTime
      TYPO3\CMS\Extbase\Persistence\ObjectStorage: Doctrine\Common\Collections\Collection
      TYPO3\CMS\Extbase\Tests\Unit\BaseTestCase: TYPO3\Flow\Tests\UnitTestCase
      TYPO3\CMS\Extbase\Configuration\ConfigurationManagerInterface: TYPO3\Flow\Configuration\ConfigurationManager
      TYPO3\CMS\Extbase\Reflection\ObjectAccess: TYPO3\Flow\Reflection\ObjectAccess

      Tx_Extbase_Persistence_ObjectStorage: Doctrine\Common\Collections\Collection
      Tx_Extbase_Tests_Unit_BaseTestCase: TYPO3\Flow\Tests\UnitTestCase

    resourceExtensions:
      templates: {targetPath: Private/Templates, extensions: [html, htm]}
      languageFiles: {targetPath: Private/Language, extensions: [xml, xlf]}
      images: {targetPath: Public/Images, extensions: [jpeg, jpg, gif, tif, svg, eps, png]}
      javascript: {targetPath: Public/JavaScript, extensions: [js, coffee, ts]}
      css: {targetPath: Public/Stylesheets, extensions: [css, sass, less, scss]}

    facts:
      isSingleton:
        expr: |
          parent().fact('isSingleton') ||
          implements('TYPO3\\CMS\\Core\\SingletonInterface') || implements('t3lib_Singleton') ||
          inherits('TYPO3\\CMS\\Extbase\\Persistence\\Repository') || inherits('Tx_Extbase_Persistence_Repository')
      isPrototype:
        expr: !fact('isSingleton')
      isEntity:
        expr: |
          inherits('TYPO3\\CMS\\Extbase\\DomainObject\\AbstractEntity') ||
          inherits('Tx_Extbase_DomainObject_AbstractEntity')
      isValueObject:
        expr: |
          inherits('TYPO3\\CMS\\Extbase\\DomainObject\\AbstractValueObject') ||
          inherits('Tx_Extbase_DomainObject_AbstractValueObject')
      isEntityOrValueObject:
        expr: fact('isEntity') || fact('isValueObject')
      isDirectEntityDescendant:
        expr: |
          parent().name('TYPO3\\CMS\\Extbase\\DomainObject\\AbstractEntity') ||
          parent().name('Tx_Extbase_DomainObject_AbstractEntity')
      isDirectValueObjectDescendant:
        expr: |
          parent().name('TYPO3\\CMS\\Extbase\\DomainObject\\AbstractValueObject') ||
          parent().name('Tx_Extbase_DomainObject_AbstractValueObject')
      isDirectEntityOrValueObjectDescendant:
        expr: fact('isDirectEntityDescendant') || fact('isDirectValueObjectDescendant')
      isController:
        expr: |
          inherits('TYPO3\\CMS\\Extbase\\Mvc\\Controller\\ActionController') ||
          inherits('Tx_Extbase_Mvc_Controller_ActionController')

    classNameStrategies:
      extbase:
        name: ExtbaseNamespacedConversionStrategy
        position: 10
      extbaseLegacy:
        name: ExtbaseLegacyConversionStrategy
        position: after extbase
      pibase:
        name: PibasePluginConversionStrategy
        position: after extbaseLegacy
      generic:
        name: GenericConversionStrategy
        position: end

    defaults:
      transformationVisitorNamespace: Mw\Metamorph\Step\TransformationVisitor\
      factNamespace: Mw\Metamorph\Domain\Model\Fact\

    containers:
      packages:
        class: Mw\Metamorph\Domain\Model\State\PackageMappingContainer
        proxy: Mw\Metamorph\Persistence\Mapping\State\PackageMappingContainerProxy
        writer: Mw\Metamorph\Persistence\Mapping\State\PackageMappingContainerWriter
      classes:
        class: Mw\Metamorph\Domain\Model\State\ClassMappingContainer
        proxy: Mw\Metamorph\Persistence\Mapping\State\ClassMappingContainerProxy
        writer: Mw\Metamorph\Persistence\Mapping\State\ClassMappingContainerWriter
      resources:
        class: Mw\Metamorph\Domain\Model\State\ResourceMappingContainer
        proxy: Mw\Metamorph\Persistence\Mapping\State\ResourceMappingContainerProxy
        writer: Mw\Metamorph\Persistence\Mapping\State\ResourceMappingContainerWriter

TYPO3:
  Flow:
    object:
      excludeClasses:
        'nikic.phpparser': ['PhpParser\\.*']
